# 构建阶段
FROM rust:1.81-slim-bullseye as builder

# 修改apt源为阿里云镜像
RUN sed -i 's/deb.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list && \
    sed -i 's/security.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list

# 配置Rust crates.io镜像源
ENV RUSTUP_DIST_SERVER="https://rsproxy.cn"
ENV RUSTUP_UPDATE_ROOT="https://rsproxy.cn/rustup"
RUN echo '[source.crates-io]' > $CARGO_HOME/config.toml && \
    echo 'replace-with = "rsproxy-sparse"' >> $CARGO_HOME/config.toml && \
    echo '[source.rsproxy]' >> $CARGO_HOME/config.toml && \
    echo 'registry = "https://rsproxy.cn/crates.io-index"' >> $CARGO_HOME/config.toml && \
    echo '[source.rsproxy-sparse]' >> $CARGO_HOME/config.toml && \
    echo 'registry = "sparse+https://rsproxy.cn/index/"' >> $CARGO_HOME/config.toml && \
    echo '[registries.rsproxy]' >> $CARGO_HOME/config.toml && \
    echo 'index = "https://rsproxy.cn/crates.io-index"' >> $CARGO_HOME/config.toml && \
    echo '[net]' >> $CARGO_HOME/config.toml && \
    echo 'git-fetch-with-cli = true' >> $CARGO_HOME/config.toml

# 安装必要的构建依赖
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# 设置工作目录
WORKDIR /usr/src/app

# 复制整个项目
COPY . .

# 构建api项目
RUN cargo build --release --bin api

# 运行阶段
FROM debian:bullseye-slim

# 修改apt源为阿里云镜像
RUN sed -i 's/deb.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list && \
    sed -i 's/security.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list

# 安装运行时依赖
RUN apt-get update && apt-get install -y \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# 创建非root用户
RUN useradd -m -u 1000 -U app

# 创建必要的目录
RUN mkdir -p /uploads && chown app:app /uploads && \
    mkdir -p /app/config && chown app:app /app/config

WORKDIR /app

# 复制编译好的二进制文件
COPY --from=builder --chown=app:app /usr/src/app/target/release/api ./

# 设置配置文件的默认位置
VOLUME ["/app/config"]

# 切换到非root用户
USER app

# 设置环境变量
ENV RUST_LOG=info

# 暴露端口
EXPOSE 10001

# 启动服务
ENTRYPOINT ["/app/api"]
CMD ["-c", "/app/config/config.toml"] 